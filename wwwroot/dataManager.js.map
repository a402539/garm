{"version":3,"file":"dataManager.js","sources":["../src/worker/const.js","../src/worker/Request.js","../src/worker/TilesLoader.js","../src/worker/renderer2d.js","../src/worker/dataManager.js"],"sourcesContent":["const WORLDWIDTHFULL = 40075016.685578496;\r\nconst W = Math.floor(WORLDWIDTHFULL / 2);\r\nconst DELAY = 60000;\r\nexport default {\r\n\tDELAY,\t\r\n\tWORLDWIDTHFULL,\r\n\tW,\r\n\tWORLDBBOX: [-W, -W, W, W],\r\n    HOST: 'maps.kosmosnimki.ru',\r\n\tSCRIPTS: {\r\n\t\tCheckVersion: '/Layer/CheckVersion.ashx'\r\n\t},\r\n};","import CONST from './const';\r\n\r\nconst\t_self = self || window;\r\n\t\t// serverBase = _self.serverBase || 'maps.kosmosnimki.ru/',\r\n\t\t// serverProxy = serverBase + 'Plugins/ForestReport/proxy',\r\n\t\t// gmxProxy = '//maps.kosmosnimki.ru/ApiSave.ashx';\r\n\r\n// let _app = {},\r\n\t// loaderStatus = {},\r\n\t// _sessionKeys = {},\r\nlet str = _self.location.origin || '',\r\n\t_protocol = str.substring(0, str.indexOf('/')),\r\n\tsyncParams = {},\r\n\tfetchOptions = {\r\n\t\t// method: 'post',\r\n\t\t// headers: {'Content-type': 'application/x-www-form-urlencoded'},\r\n\t\t// mode: 'cors',\r\n\t\t// redirect: 'follow',\r\n\t\tcredentials: 'include'\r\n\t};\r\n\r\nconst COMPARS = {WrapStyle: 'None', ftc: 'osm', srs: 3857};\r\n\r\nconst setSyncParams = (hash) => {\t// установка дополнительных параметров для серверных запросов\r\n\tsyncParams = hash;\r\n};\r\n\r\nconst chkSignal = (signalName, signals, opt) => {\r\n\topt = opt || {};\r\n\tlet sObj = signals[signalName];\r\n// console.log('sssssss', sObj, signalName)\r\n\tif (sObj) { sObj.abort(); }\r\n\tsObj = signals[signalName] = new AbortController();\r\n\t// sObj.signal.addEventListener('abort', (ev) => console.log('Отмена fetch:', ev));\r\n\topt.signal = sObj.signal;\r\n\tsignals[signalName] = sObj;\r\n\treturn opt;\r\n};\r\n/*\r\nconst getSyncParams = (stringFlag:boolean) => {\r\n\tvar res = syncParams;\r\n\tif (stringFlag) {\r\n\t\t// var arr = [];\r\n\t\t// for (var key in res) {\r\n\t\t\t// arr.push(key + '=' + res[key]);\r\n\t\t// }\r\n\t\t// res = arr.join('&');\r\n\t}\r\n\treturn res;\r\n};\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\n*/\r\nlet utils = {\r\n\tgetJson: function(queue) {\r\n\t\tlet params = queue.params || {};\r\n\t\tif (queue.paramsArr) {\r\n\t\t\tqueue.paramsArr.forEach((it) => {\r\n\t\t\t\tparams = Object.assign(params, it);\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet par = Object.assign({}, params, syncParams);\r\n\t\tlet\toptions = queue.options || {};\r\n\t\tlet\topt = Object.assign({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tcredentials: 'include',\r\n                headers: {\r\n                    // 'Content-Type': 'application/json'\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n\r\n\t\t\t}, fetchOptions, options, {\r\n\t\t\t\tbody: utils.getFormBody(par)\r\n\t\t\t});\r\n\r\n\t\treturn fetch(utils.chkProtocol(queue.url), opt)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t})\r\n\t\t.then(function(res) {\r\n\t\t\treturn {url: queue.url, queue: queue, load: true, res: res};\r\n\t\t})\r\n\t\t.catch(function(err) {\r\n\t\t\treturn {url: queue.url, queue: queue, load: false, error: err.toString()};\r\n\t\t\t// handler.workerContext.postMessage(out);\r\n\t\t});\r\n    },\r\n\r\n\tgetTileJson: function(queue) {\r\n\t\tlet params = queue.params || {};\r\n\t\tif (queue.paramsArr) {\r\n\t\t\tqueue.paramsArr.forEach((it) => {\r\n\t\t\t\tparams = Object.assign(params, it);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// let par = Object.assign({}, fetchOptions, COMPARS, params, syncParams),\r\n\t\tlet par = Object.assign({}, COMPARS, params, syncParams);\r\n\t\tlet options = queue.options || {};\r\n\t\treturn fetch(queue.url + '?' + utils.getFormBody(par), fetchOptions)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t});\r\n\t},\r\n/*\r\n\textend: function (dest) {\r\n\t\tvar i, j, len, src;\r\n\r\n\t\tfor (j = 1, len = arguments.length; j < len; j++) {\r\n\t\t\tsrc = arguments[j];\r\n\t\t\tfor (i in src) {\r\n\t\t\t\tdest[i] = src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dest;\r\n\t},\r\n\tmakeTileKeys: function(it, ptiles) {\r\n\t\tvar tklen = it.tilesOrder.length,\r\n\t\t\tarr = it.tiles,\r\n\t\t\ttiles = {},\r\n\t\t\tnewTiles = {};\r\n\r\n\t\twhile (arr.length) {\r\n\t\t\tvar t = arr.splice(0, tklen),\r\n\t\t\t\ttk = t.join('_'),\r\n\t\t\t\ttile = ptiles[tk];\r\n\t\t\tif (!tile || !tile.data) {\r\n\t\t\t\tif (!tile) {\r\n\t\t\t\t\ttiles[tk] = {\r\n\t\t\t\t\t\ttp: {z: t[0], x: t[1], y: t[2], v: t[3], s: t[4], d: t[5]}\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttiles[tk] = tile;\r\n\t\t\t\t}\r\n\t\t\t\tnewTiles[tk] = true;\r\n\t\t\t} else {\r\n\t\t\t\ttiles[tk] = tile;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {tiles: tiles, newTiles: newTiles};\r\n\t},\r\n\r\n\tgetZoomRange: function(info) {\r\n\t\tvar arr = info.properties.styles,\r\n\t\t\tout = [40, 0];\r\n\t\tfor (var i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tvar st = arr[i];\r\n\t\t\tout[0] = Math.min(out[0], st.MinZoom);\r\n\t\t\tout[1] = Math.max(out[1], st.MaxZoom);\r\n\t\t}\r\n\t\tout[0] = out[0] === 40 ? 1 : out[0];\r\n\t\tout[1] = out[1] === 0 ? 22 : out[1];\r\n\t\treturn out;\r\n\t},\r\n*/\r\n\tchkProtocol: function(url) {\r\n\t\t// return 'https:' + url;\r\n\t\treturn url.substr(0, _protocol.length) === _protocol ? url : _protocol + url;\r\n\t},\r\n\tgetFormBody: function(par) {\r\n\t\treturn Object.keys(par).map(function(key) { return encodeURIComponent(key) + '=' + encodeURIComponent(par[key]); }).join('&');\r\n\t},\r\n\tchkResponse: function(resp, type) {\r\n\t\tif (resp.status < 200 || resp.status >= 300) {\t\t\t\t\t\t// error\r\n\t\t\treturn Promise.reject(resp);\r\n\t\t} else {\r\n\t\t\tvar contentType = resp.headers.get('Content-Type');\r\n\t\t\tif (type === 'bitmap') {\t\t\t\t\t\t\t\t\t\t\t\t// get blob\r\n\t\t\t\treturn resp.blob();\r\n\t\t\t} else if (contentType.indexOf('application/json') > -1) {\t\t\t\t// application/json; charset=utf-8\r\n\t\t\t\treturn resp.json();\r\n\t\t\t} else if (contentType.indexOf('text/javascript') > -1) {\t \t\t\t// text/javascript; charset=utf-8\r\n\t\t\t\treturn resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.text();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.formData();\r\n\t\t\t// } else if (contentType.indexOf('application/json') > -1) {\t \t\t// application/json; charset=utf-8\r\n\t\t\t\t// ret = resp.arrayBuffer();\r\n\t\t\t// } else {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn resp.text();\r\n\t},\r\n/*\r\n\tgetBitMap: function(url) {\r\n\t\tlet options = {type: 'bitmap'};\r\n\t\treturn fetch(url, options)\r\n\t\t.then(function(res) {\r\n\t\t\treturn utils.chkResponse(res, options.type);\r\n\t\t// })\r\n\t\t// .then(function(blob) {\r\n\t\t\t// return createImageBitmap(blob, {\r\n\t\t\t\t// premultiplyAlpha: 'none',\r\n\t\t\t\t// colorSpaceConversion: 'none'\r\n\t\t\t// });\r\n\t\t});\r\n\t},\r\n\r\n\tgeoItemBounds: function(geo) {  // get item bounds array by geometry\r\n        if (!geo) {\r\n            return {\r\n                bounds: null,\r\n                boundsArr: []\r\n            };\r\n        }\r\n        var type = geo.type,\r\n            coords = geo.coordinates,\r\n            b = null,\r\n            i = 0,\r\n            len = 0,\r\n            bounds = null,\r\n            boundsArr = [];\r\n        if (type === 'MULTIPOLYGON' || type === 'MultiPolygon') {\r\n            bounds = new Bounds();\r\n            for (i = 0, len = coords.length; i < len; i++) {\r\n                var arr1 = [];\r\n                for (var j = 0, len1 = coords[i].length; j < len1; j++) {\r\n                    b = new Bounds(coords[i][j]);\r\n                    arr1.push(b);\r\n                    if (j === 0) { bounds.extendBounds(b); }\r\n                }\r\n                boundsArr.push(arr1);\r\n            }\r\n        } else if (type === 'POLYGON' || type === 'Polygon') {\r\n            bounds = new Bounds();\r\n            for (i = 0, len = coords.length; i < len; i++) {\r\n                b = new Bounds(coords[i]);\r\n                boundsArr.push(b);\r\n                if (i === 0) { bounds.extendBounds(b); }\r\n            }\r\n        } else if (type === 'POINT' || type === 'Point') {\r\n            bounds = new Bounds([coords]);\r\n        } else if (type === 'MULTIPOINT' || type === 'MultiPoint') {\r\n            bounds = new Bounds();\r\n            for (i = 0, len = coords.length; i < len; i++) {\r\n                b = new Bounds([coords[i]]);\r\n                bounds.extendBounds(b);\r\n            }\r\n        } else if (type === 'LINESTRING' || type === 'LineString') {\r\n            bounds = new Bounds(coords);\r\n            //boundsArr.push(bounds);\r\n        } else if (type === 'MULTILINESTRING' || type === 'MultiLineString') {\r\n            bounds = new Bounds();\r\n            for (i = 0, len = coords.length; i < len; i++) {\r\n                b = new Bounds(coords[i]);\r\n                bounds.extendBounds(b);\r\n                //boundsArr.push(b);\r\n            }\r\n        }\r\n        return {\r\n            bounds: bounds,\r\n            boundsArr: boundsArr\r\n        };\r\n    }\r\n*/\r\n};\r\n/*\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\nlet _maps = {};\r\nconst getMapTree = (pars) => {\r\n\tpars = pars || {};\r\n\tlet hostName = pars.hostName || serverBase,\r\n\t\tid = pars.mapId;\r\n\treturn utils.getJson({\r\n\t\turl: '//' + hostName + '/Map/GetMapFolder',\r\n\t\t// options: {},\r\n\t\tparams: {\r\n\t\t\tsrs: 3857, \r\n\t\t\tskipTiles: 'All',\r\n\r\n\t\t\tmapId: id,\r\n\t\t\tfolderId: 'root',\r\n\t\t\tvisibleItemOnly: false\r\n\t\t}\r\n\t})\r\n\t\t.then(function(json) {\r\n\t\t\tlet out = parseTree(json.res);\r\n\t\t\t_maps[hostName] = _maps[hostName] || {};\r\n\t\t\t_maps[hostName][id] = out;\r\n\t\t\treturn parseTree(out);\r\n\t\t});\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\n// const getLayerItems = (params) => {\r\n\t// params = params || {};\r\n\r\n\t// let url = `${serverBase}VectorLayer/Search.ashx`;\r\n\t// url += '?layer=' + params.layerID;\r\n\t// if (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\t// url += '&out_cs=EPSG:4326';\r\n\t// url += '&geometry=true';\r\n\t// return getReq(url);\r\n// };\r\n// const getReportsCount = () => {\r\n\t// return getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n// };\r\n\r\nlet dataSources = {},\r\n\tloaderStatus1 = {};\r\n\r\nconst addDataSource = (pars) => {\r\n\tpars = pars || {};\r\n\r\n\tlet id = pars.id;\r\n\tif (id) {\r\n\t\tlet hostName = pars.hostName;\r\n\t\t\r\n\t} else {\r\n\t\tconsole.warn('Warning: Specify layer \\'id\\' and \\'hostName\\`', pars);\r\n\t}\r\nconsole.log('addDataSource:', pars);\r\n\treturn;\r\n};\r\n\r\nconst removeDataSource = (pars) => {\r\n\tpars = pars || {};\r\n\r\n\tlet id = pars.id;\r\n\tif (id) {\r\n\t\tlet hostName = pars.hostName;\r\n\t\t\r\n\t} else {\r\n\t\tconsole.warn('Warning: Specify layer \\'id\\' and \\'hostName\\`', pars);\r\n\t}\r\nconsole.log('removeDataSource:', pars);\r\n\t//Requests.removeDataSource({id: message.layerID, hostName: message.hostName}).then((json) => {\r\n\treturn;\r\n};\r\nlet _maps = {};\r\nconst getMapTree = (pars) => {\r\n\tpars = pars || {};\r\n\tlet hostName = pars.hostName || 'maps.kosmosnimki.ru',\r\n\t\tid = pars.mapID;\r\n\treturn utils.getJson({\r\n\t\turl: '//' + hostName + '/Map/GetMapFolder',\r\n\t\t// options: {},\r\n\t\tparams: {\r\n\t\t\tsrs: 3857, \r\n\t\t\tskipTiles: 'All',\r\n\r\n\t\t\tmapId: id,\r\n\t\t\tfolderId: 'root',\r\n\t\t\tvisibleItemOnly: false\r\n\t\t}\r\n\t})\r\n\t\t// .then(function(json) {\r\n\t\t\t// let out = parseTree(json.res);\r\n\t\t\t// _maps[hostName] = _maps[hostName] || {};\r\n\t\t\t// _maps[hostName][id] = out;\r\n\t\t\t// return parseTree(out);\r\n\t\t// });\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = utils.parseLayerProps(props);\r\n\t\t\tph.level = level;\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\n*/\r\n\r\nconst Bounds = function(arr) {\r\n    this.min = {\r\n        x: Number.MAX_VALUE,\r\n        y: Number.MAX_VALUE\r\n    };\r\n    this.max = {\r\n        x: -Number.MAX_VALUE,\r\n        y: -Number.MAX_VALUE\r\n    };\r\n    this.extendArray(arr);\r\n};\r\nBounds.prototype = {\r\n    extend: function(x, y) {\r\n        if (x < this.min.x) { this.min.x = x; }\r\n        if (x > this.max.x) { this.max.x = x; }\r\n        if (y < this.min.y) { this.min.y = y; }\r\n        if (y > this.max.y) { this.max.y = y; }\r\n        return this;\r\n    },\r\n    extendBounds: function(bounds) {\r\n        return this.extendArray([[bounds.min.x, bounds.min.y], [bounds.max.x, bounds.max.y]]);\r\n    },\r\n    extendArray: function(arr) {\r\n        if (!arr || !arr.length) { return this; }\r\n        var i, len;\r\n        if (typeof arr[0] === 'number') {\r\n            for (i = 0, len = arr.length; i < len; i += 2) {\r\n                this.extend(arr[i], arr[i + 1]);\r\n            }\r\n        } else {\r\n            for (i = 0, len = arr.length; i < len; i++) {\r\n                this.extend(arr[i][0], arr[i][1]);\r\n            }\r\n        }\r\n        return this;\r\n    },\r\n    addBuffer: function(dxmin, dymin, dxmax, dymax) {\r\n        this.min.x -= dxmin;\r\n        this.min.y -= dymin || dxmin;\r\n        this.max.x += dxmax || dxmin;\r\n        this.max.y += dymax || dymin || dxmin;\r\n        return this;\r\n    },\r\n    contains: function (point) { // ([x, y]) -> Boolean\r\n        var min = this.min, max = this.max,\r\n            x = point[0], y = point[1];\r\n        return x >= min.x && x <= max.x && y >= min.y && y <= max.y;\r\n    },\r\n    containsWithDelta: function (point, dx, dy) { // ([x, y]) -> Boolean\r\n        var min = this.min, max = this.max,\r\n            x = point[0], y = point[1];\r\n\t\tdx = dx || 0;\r\n\t\tdy = dy || dx;\r\n        return x >= min.x - dx && x <= max.x + dx && y >= min.y - dy && y <= max.y + dy;\r\n    },\r\n    getCenter: function () {\r\n        var min = this.min, max = this.max;\r\n        return [(min.x + max.x) / 2, (min.y + max.y) / 2];\r\n    },\r\n    addOffset: function (offset) {\r\n        this.min.x += offset[0]; this.max.x += offset[0];\r\n        this.min.y += offset[1]; this.max.y += offset[1];\r\n        return this;\r\n    },\r\n    intersects: function (bounds) { // (Bounds) -> Boolean\r\n        var min = this.min,\r\n            max = this.max,\r\n            min2 = bounds.min,\r\n            max2 = bounds.max;\r\n        return max2.x > min.x && min2.x < max.x && max2.y > min.y && min2.y < max.y;\r\n    },\r\n    intersectsWithDelta: function (bounds, dx, dy) { // (Bounds, dx, dy) -> Boolean\r\n        var min = this.min,\r\n            max = this.max,\r\n            x = dx || 0,\r\n            y = dy || x,\r\n            min2 = bounds.min,\r\n            max2 = bounds.max;\r\n        return max2.x + x > min.x && min2.x - x < max.x && max2.y + y > min.y && min2.y - y < max.y;\r\n    },\r\n    isEqual: function (bounds) { // (Bounds) -> Boolean\r\n        var min = this.min,\r\n            max = this.max,\r\n            min2 = bounds.min,\r\n            max2 = bounds.max;\r\n        return max2.x === max.x && min2.x === min.x && max2.y === max.y && min2.y === min.y;\r\n    },\r\n    isNodeIntersect: function (coords) {\r\n        for (var i = 0, len = coords.length; i < len; i++) {\r\n            if (this.contains(coords[i])) {\r\n                return {\r\n                    num: i,\r\n                    point: coords[i]\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n};\r\n\r\n    // bounds: function(arr) {\r\n\t\t// return new Bounds(arr);\r\n    // },\r\n\r\nexport default {\r\n\tbounds: arr => new Bounds(arr),\r\n    getTileBounds: function(coords, delta) {\r\n\t\tvar tileSize = CONST.WORLDWIDTHFULL / Math.pow(2, coords.z),\r\n            minx = coords.x * tileSize - CONST.W,\r\n            miny = CONST.W - tileSize - coords.y * tileSize;\r\n\t\tdelta = delta || 0; \r\n        return new Bounds([\r\n\t\t\t[minx - delta, miny - delta],\r\n\t\t\t[minx + tileSize + delta, miny + tileSize + delta]\r\n\t\t]);\r\n    },\r\n\r\n\t// geoItemBounds: utils.geoItemBounds,\r\n\tchkSignal,\r\n\tCOMPARS,\r\n\tsetSyncParams,\r\n\t// getSyncParams,\r\n\t// parseURLParams,\r\n\t// getMapTree,\r\n\t// extend: utils.extend,\r\n\t// getBitMap: utils.getBitMap,\r\n\tgetFormBody: utils.getFormBody,\r\n\tgetTileJson: utils.getTileJson,\r\n\tgetJson: utils.getJson\r\n\t// addDataSource,\r\n\t// removeDataSource,\r\n\t// getReportsCount,\r\n\t// getLayerItems\r\n};","import Request from './Request.js';\r\n\r\nconst TILE_PREFIX = 'gmxAPI._vectorTileReceiver(';\r\n\r\nexport default function (pars) {\r\n\tpars = pars || {};\r\n\tif (!pars.signals) { pars.signals = {}; }\r\n\tif (!pars.tilesPromise) { pars.tilesPromise = {}; }\r\n\t\r\n\t// return new Promise((resolve) => {\r\n\t\tlet tilesOrder = pars.tilesOrder,\r\n\t\t\tpb = pars.tiles,\r\n\t\t\ttilesPromise = {};\r\n\t\tfor (let i = 0, len = pb.length; i < len; i += tilesOrder.length) {\r\n\t\t\tlet arr = pb.slice(i, i + tilesOrder.length),\r\n\t\t\t\ttkey = arr.join('_'),\r\n\t\t\t\ttHash = tilesOrder.reduce((p, c, j) => { p[c] = arr[j]; return p; }, {});\r\n\r\n\t\t\tif (pars.tilesPromise[tkey]) {\r\n\t\t\t\ttilesPromise[tkey] = pars.tilesPromise[tkey];\r\n\t\t\t} else {\r\n\t\t\t\ttilesPromise[tkey] = Request.getTileJson({\r\n\t\t\t\t\turl: '//' + pars.hostName + '/TileSender.ashx',\r\n\t\t\t\t\toptions: Request.chkSignal(tkey, pars.signals, {}),\r\n\t\t\t\t\tparamsArr: [tHash, {\r\n\t\t\t\t\t\tr: 'j',\r\n\t\t\t\t\t\tModeKey: 'tile',\r\n\t\t\t\t\t\tLayerName: pars.id,\r\n\t\t\t\t\t}]\r\n\t\t\t\t}).then(json => {\r\n\t\t\t\t\tdelete pars.signals[tkey];\r\n\t\t\t\t\tif (typeof(json) === 'string') {\r\n\t\t\t\t\t\tif (json.substr(0, TILE_PREFIX.length) === TILE_PREFIX) {\r\n\t\t\t\t\t\t\tjson = json.replace(TILE_PREFIX, '');\r\n\t\t\t\t\t\t\tjson = JSON.parse(json.substr(0, json.length -1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tjson.bounds = Request.bounds([[json.bbox[0], json.bbox[1]], [json.bbox[2], json.bbox[3]]]);\r\n\t\t\t\t\tjson.boundsVtile = Request.getTileBounds(json, 0);\r\n\t\t\t\t\treturn json;\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\tconsole.warn('Bad vector tile:', tkey, err);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tObject.keys(pars.signals).forEach(k => {\r\n\t\t\tif (!tilesPromise[k]) {\r\n\t\t\t\tpars.signals[k].abort();\r\n\t\t\t\tdelete pars.signals[k];\r\n\t\t\t}\r\n\t\t});\r\n\t\t// pars.tilesPromise = tilesPromise;\r\n\t\treturn tilesPromise;\r\n\t\t// return out;\r\n\t\t// Promise.all(arr).then((out) => {\r\n\t\t\t// resolve(out);\r\n\t\t// });\r\n\t// });\r\n/*\r\n*/\r\n};","export default {\r\n\trender2d: (options, coords) => {\r\n\t\tconst {scale, canvas} = options;        \r\n\t\tconst ctx = canvas.getContext(\"2d\");\r\n// console.log('coords', coords);\r\n\t\tctx.beginPath();\r\n\t\tctx.strokeStyle = 'black';\r\n\t\tctx.fillStyle = 'red';\r\n\t\t// ctx.moveTo(coords[0], coords[1]);\r\n\t\tctx.arc(coords[0], coords[1], 14 / (2 * scale), 0, 2 * Math.PI);\r\n\t\t// ctx.arc(155, 166, 14, 0, 2 * Math.PI);\r\n\t\tctx.stroke();\r\n\t\tctx.fill();\r\n\t\treturn true;\r\n\t},\r\n\trender2dEmpty: (options) => {\r\n\t\tconst {coords, canvas} = options;        \r\n\t\t// const gl = canvas.getContext(\"webgl\");\r\n\t\tconst {x, y, z} = coords;\r\n\t\tconst tileKey = [x,y,z].join(':');\r\n\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\tfunction render() {\r\n\t\t\t// ... some drawing using the gl context ...\r\n\t\t\t//requestAnimationFrame(render);\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = 'black';\r\n\t\t\tctx.rect(0, 0, 255, 255);\r\n\t\t\tctx.moveTo(0, 0);\r\n\t\t\tctx.lineTo(255, 255);\r\n\t\t\tctx.moveTo(255, 0);\r\n\t\t\tctx.lineTo(0, 255);\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.strokeStyle = 'red';\r\n\t\t\tctx.arc(128, 128, 128, 0, Math.PI * 2, false);\r\n\t\t\t// ctx.stroke();        \r\n\t\t\tctx.font = '25px serif';\r\n\t\t\tlet textMetrics = ctx.measureText(tileKey);\r\n\r\n\t\t\tctx.fillText(tileKey, 128 - textMetrics.width / 2, 100);\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\t// console.log('render', tileKey);\r\n\t\t}\r\n\t\trequestAnimationFrame(render);\r\n\t\treturn true;\r\n\t}\r\n};","import CONST from './const.js';\r\nimport Request from './Request.js';\r\nimport load_tiles from './TilesLoader.js';\r\nimport Renderer from './renderer2d.js';\r\n\r\nconst hosts = {};\r\nlet bbox = null;\r\nlet zoom = 3;\r\nlet scale = 1;\r\n\r\nlet intervalID;\r\nlet timeoutID;\r\n\r\nconst utils = {\r\n\tnow: function() {\r\n\t\tif (timeoutID) { clearTimeout(timeoutID); }\r\n\t\ttimeoutID = setTimeout(chkVersion, 0);\r\n    },\r\n\r\n    stop: function() {\r\n\t\t// console.log('stop:', intervalID, CONST.DELAY);\r\n        if (intervalID) { clearInterval(intervalID); }\r\n        intervalID = null;\r\n    },\r\n\r\n    start: function(msec) {\r\n\t\t// console.log('start:', intervalID, msec);\r\n        utils.stop();\r\n        intervalID = setInterval(chkVersion, msec || CONST.DELAY);\r\n    },\r\n\taddSource: (attr) => {\r\n\t\tlet id = attr.id || attr.layerId;\r\n\t\tif (id) {\r\n\t\t\tlet hostName = attr.hostName || CONST.HOST;\r\n\t\t\tif (!hosts[hostName]) {\r\n\t\t\t\thosts[hostName] = {ids: {}, signals: {}};\r\n\t\t\t\tif (attr.apiKey) {\r\n\t\t\t\t\thosts[hostName].apiKeyPromise = Request.getJson({\r\n\t\t\t\t\t\turl: '//' + hostName + '/ApiKey.ashx',\r\n\t\t\t\t\t\tparamsArr: [Request.COMPARS, {\r\n\t\t\t\t\t\t\tKey: attr.apiKey\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t})\r\n                    .then((json) => {\r\n\t\t\t\t\t\t// console.log('/ApiKey.ashx', json);\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\thosts[hostName].Key = res.Result.Key;\r\n\t\t\t\t\t\t\treturn hosts[hostName].Key;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\thosts[hostName].ids[id] = attr;\r\n\t\t\tif (!intervalID) { utils.start(0); }\r\n\t\t\tutils.now();\r\n\t\t} else {\r\n\t\t\tconsole.warn('Warning: Specify source `id` and `hostName`', attr);\r\n\t\t}\r\n    },\r\n\tremoveSource: (attr) => {\r\n\t\tattr = attr || {};\r\n\r\n\t\tlet id = attr.id;\r\n\t\tif (id) {\r\n\t\t\tlet hostName = attr.hostName || CONST.HOST;\r\n\t\t\tif (hosts[hostName]) {\r\n\t\t\t\tlet pt = hosts[hostName].ids[id];\r\n\tconsole.log('signals:', pt.signals, pt);\r\n\t\t\t\tif (pt.signals) {\r\n\t\t\t\t\tObject.values(pt.signals).forEach((it) => {\r\n\t\t\t\t\t\tit.abort();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete hosts[hostName].ids[id];\r\n\t\t\t\tif (Object.keys(hosts[hostName].ids).length === 0) { delete hosts[hostName]; }\r\n\t\t\t\tif (Object.keys(hosts).length === 0) { utils.stop(); }\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn('Warning: Specify layer id and hostName', attr);\r\n\t\t}\r\n    },\r\n    getTileAttributes: function(prop) {\r\n        let tileAttributeIndexes = {};\r\n        let tileAttributeTypes = {};\r\n        if (prop.attributes) {\r\n            let attrs = prop.attributes,\r\n                attrTypes = prop.attrTypes || null;\r\n            if (prop.identityField) { tileAttributeIndexes[prop.identityField] = 0; }\r\n            for (let a = 0; a < attrs.length; a++) {\r\n                let key = attrs[a];\r\n                tileAttributeIndexes[key] = a + 1;\r\n                tileAttributeTypes[key] = attrTypes ? attrTypes[a] : 'string';\r\n            }\r\n        }\r\n        return {\r\n            tileAttributeTypes: tileAttributeTypes,\r\n            tileAttributeIndexes: tileAttributeIndexes\r\n        };\r\n    },\r\n\tchkHost: (hostName) => {\r\n\t\tconst hostLayers = hosts[hostName];\r\n\t\tconst ids = hostLayers.ids;\r\n\t\tconst arr = [];\r\n\r\n\t\tfor (let name in ids) {\r\n\t\t\tlet pt = ids[name];\r\n\t\t\tlet\tpars = { Name: name, Version: 'v' in pt ? pt.v : -1 };\r\n\t\t\tif (pt.dateBegin) {\r\n\t\t\t\tpars.dateBegin = pt.dateBegin;\r\n\t\t\t}\r\n\t\t\tif (pt.dateEnd) {\r\n\t\t\t\tpars.dateEnd = pt.dateEnd;\r\n\t\t\t}\r\n\t\t\tarr.push(pars);\r\n\t\t}\r\n\r\n\t\treturn Request.getJson({\r\n\t\t\turl: '//' + hostName + CONST.SCRIPTS.CheckVersion,\r\n\t\t\toptions: Request.chkSignal('chkVersion', hostLayers.signals, undefined),\r\n\t\t\tparamsArr: [Request.COMPARS, {\r\n\t\t\t\tlayers: JSON.stringify(arr),\r\n\t\t\t\tbboxes: JSON.stringify(bbox || [CONST.WORLDBBOX]),\r\n\t\t\t\t// generalizedTiles: false,\r\n\t\t\t\tzoom: zoom\r\n\t\t\t}]\r\n\t\t}).then(json => {\r\n\t\t\tdelete hostLayers.signals.chkVersion;\r\n\t\t\treturn json;\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.error(err);\r\n\t\t\t// resolve('');\r\n\t\t});\r\n\t},\r\n};\r\n\r\nconst chkVersion = () => {\r\n    // console.log('dataManager chkVersion', hosts);\r\n\tfor (let host in hosts) {\r\n\t\tutils.chkHost(host).then((json) => {\r\n\t\t\tif (json.error) {\r\n\t\t\t\t// console.warn('chkVersion:', json);\r\n\t\t\t} else {\r\n\t\t\t\tlet hostLayers = hosts[host];\r\n\t\t\t\tlet\tids = hostLayers.ids;\r\n\t\t\t\tlet\tres = json.res;\r\n\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\tres.Result.forEach((it) => {\r\n\t\t\t\t\t\tlet pt = ids[it.name];\r\n\t\t\t\t\t\tlet\tprops = it.properties;\r\n\t\t\t\t\t\tif (props) {\r\n\t\t\t\t\t\t\tpt.v = props.LayerVersion;\r\n\t\t\t\t\t\t\tpt.properties = props;\r\n\t\t\t\t\t\t\tpt.geometry = it.geometry;\r\n\t\t\t\t\t\t\tif (!pt.tileAttributeIndexes) {\r\n\t\t\t\t\t\t\t\tpt = Object.assign(pt, utils.getTileAttributes(props));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpt.hostName = host;\r\n\t\t\t\t\t\tpt.tiles = it.tiles;\r\n\t\t\t\t\t\t// pt.tiles = it.tiles.slice(0, 12);\r\n\t\t\t\t\t\tpt.tilesOrder = it.tilesOrder;\r\n\t\t\t\t\t\tpt.tilesPromise = load_tiles(pt);\r\n\t\t\t\t\t\tlet event = new Event('tilesLoaded', {bubbles: true}); // (2)\r\n\t\t\t\t\t\tevent.detail = pt;\r\n\t\t\t\t\t\tdispatchEvent(event);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.Status === 'error') {\r\n\t\t\t\t\tconsole.warn('Error: ', res);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tself.postMessage({\r\n\t\tcmd: 'chkVersion',\r\n\t\tnow: Date.now(),\r\n\t\tres: 'done'\r\n\t});\r\n};\r\n/*\r\nconst repaintScreenTiles = (vt, pt, clearFlag) => {\r\n\tlet done = false;\r\n\tif(pt.screen) {\r\n\t\tObject.keys(pt.screen).forEach(tileKey => {\r\n\t\t\tlet st = pt.screen[tileKey];\r\n\t\t\tif (st.coords.z === zoom) {\r\n\t\t\t\tst.scale = scale;\r\n\t\t\t\tlet delta = 14 / scale;\r\n\t\t\t\tlet bounds = st.bounds;\r\n\t\t\t\tconst ctx = st.canvas.getContext(\"2d\");\r\n\t\t\t\tctx.resetTransform();\r\n\t\t\t\tctx.transform(scale, 0, 0, -scale, -bounds.min.x * scale, bounds.max.y * scale);\r\n\r\n\t\t\t\tif(vt.bounds.intersectsWithDelta(bounds, delta)) {\r\n\t\t\t\t\tvt.values.forEach(it => {\r\n\t\t\t\t\t\tconst coords = it[it.length - 1].coordinates;\r\n\t\t\t\t\t\tif (bounds.containsWithDelta(coords, delta)) {\r\n\t\t\t\t\t\t\tRenderer.render2d(st, coords);\r\n\t\t\t\t\t\t\tdone = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t// } else if (clearFlag) {\r\n\t\t\t\t// delete pt.screen[tileKey];\r\n\t\t\t}\r\n\t\t});\r\n\t} else if(pt.screenAll) {\r\n\t\tconst ctx = pt.screenAll.canvas.getContext(\"2d\");\r\n\t\tctx.resetTransform();\r\n\t\tctx.transform(scale, 0, 0, -scale, -bbox[0][0] * scale, bbox[0][3] * scale);\r\n\t\t\t\tpt.screenAll.scale = scale;\r\n\t\t\t\t\tvt.values.forEach(it => {\r\n\t\t\t\t\t\tconst coords = it[it.length - 1].coordinates;\r\n\t\t\t\t\t\t// if (bounds.containsWithDelta(coords, delta)) {\r\n\t\t\t\t\t\t\tRenderer.render2d(pt.screenAll, coords);\r\n\t\t\t\t\t\t\tdone = true;\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t});\r\n\t}\r\n\treturn done;\r\n};\r\n*/\r\n\r\nconst recheckVectorTiles = (pt, clearFlag) => {\r\n\tlet done = false;\r\n\tif(pt.tilesPromise) {\r\n\t\tif(pt.screenAll) {\r\n\t\t\tconst canvas = pt.screenAll.canvas;\r\n\t\t\tconst ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.resetTransform();\r\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t\tctx.transform(scale, 0, 0, -scale, -bbox[0][0] * scale, bbox[0][3] * scale);\r\n\t\t\tpt.screenAll.scale = scale;\r\n\t\t\tlet delta = 14 / scale;\r\n\t\t\tlet bounds = Request.bounds(bbox[0]);\r\n\t\t\t// let bounds = Request.bounds([[bbox[0][0], bbox[0][1]], [bbox[0][2], bbox[0][3]]]);\r\n\t\t\tconsole.log('pt.tilesPromise', Object.keys(pt.tilesPromise).length);\r\n\t\t\t\r\n\t\t\tPromise.all(Object.values(pt.tilesPromise)).then((res) => {\r\n\t\t\t\tres.forEach(vt => {\r\n\t\t\t\t\tif (bounds.intersectsWithDelta(vt.bounds, delta)) {\r\n\t\t\t\t\t\tvt.values.forEach(it => {\r\n\t\t\t\t\t\t\tconst coords = it[it.length - 1].coordinates;\r\n\t\t\t\t\t\t\tif (bounds.containsWithDelta(coords, delta)) {\r\n\t\t\t\t\t\t\t\tRenderer.render2d(pt.screenAll, coords);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tbitmapToMain(pt.screenAll.id, canvas);\r\n\t\t\t});\r\n\t\t\tdone = true;\r\n\t\t// } else {\r\n\t\t\t// Promise.all(Object.values(pt.tilesPromise)).then((res) => {\r\n\t\t\t\t// res.forEach(vt => {\r\n\t\t\t\t\t// done = repaintScreenTiles(vt, pt, clearFlag);\r\n\t\t\t\t// });\r\n\t\t\t// });\r\n\t\t}\r\n\t}\r\n\tif(!done) {\r\n\t\t// Renderer.render2dEmpty(st);\r\n\t}\r\n\t// self.postMessage({\r\n\t\t// tileKey,\r\n\t\t// layerId: pt.id,\r\n\t\t// cmd: 'render',\r\n\t\t// res: 'done'\r\n\t// });\r\n};\r\n\r\nconst bitmapToMain = (layerId, canvas) => {\r\n\tvar imageData = canvas.transferToImageBitmap();\r\n\tself.postMessage({\r\n\t\tcmd: 'rendered',\r\n\t\tlayerId: layerId,\r\n\t\tbitmap: imageData\r\n\t}, [ imageData ]);\r\n};\r\n\r\nconst redrawScreen = (clearFlag) => {\r\n\tfor (let host in hosts) {\r\n\t\tlet hostLayers = hosts[host];\r\n\t\tlet\tids = hostLayers.ids;\r\n\t\tfor (let id in ids) {\r\n\t\t\tlet pt = ids[id];\r\n\t\t\trecheckVectorTiles(pt, clearFlag);\r\n\t\t}\r\n\t}\r\n};\r\n\r\naddEventListener('tilesLoaded', redrawScreen);\r\n\r\nonmessage = function(evt) {    \r\n    // console.log('dataManager', evt.data);\r\n\tconst data = evt.data || {};\r\n\tconst {cmd} = data;\r\n\t// let worker: Worker;\r\n\tswitch(cmd) {\r\n\t\tcase 'addSource':\r\n\t\t\tutils.addSource(data);\r\n\t\t\tbreak;\r\n\t\tcase 'addLayer':\r\n\t\t\tdata.worker = new Worker(\"renderer.js\");\r\n\t\t\tutils.addSource(data);\t\t\t\r\n\t\t\tbreak;\r\n\t\tcase 'drawScreen':\r\n\t\t\tlet id1 = data.id;\r\n\t\t\tif (id1) {\r\n\t\t\t\tlet hostName = data.hostName || CONST.HOST;\r\n\t\t\t\tif (hosts[hostName]) {\r\n\t\t\t\t\tlet it = hosts[hostName].ids[id1];\r\n\t\t\t\t\tit.screenAll = {\r\n\t\t\t\t\t\tcanvas: new OffscreenCanvas(data.width, data.height),\r\n\t\t\t\t\t\tid: id1,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tredrawScreen(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'drawTile':\r\n\t\t\tlet id = data.id;\r\n\t\t\tconst {x, y, z} = data.coords;\r\n\t\t\tconst tileKey = [x,y,z].join(':');\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tlet hostName = data.hostName || CONST.HOST;\r\n\t\t\t\tif (hosts[hostName]) {\r\n\t\t\t\t\tlet it = hosts[hostName].ids[id];\r\n\t\t\t\t\tif (!it.screen) { it.screen = {}; }\r\n\t\t\t\t\tlet bounds = Request.getTileBounds(data.coords, 0);\r\n\t\t\t\t\tit.screen[tileKey] = {\r\n\t\t\t\t\t\tbounds: bounds,\r\n\t\t\t\t\t\tcoords: data.coords,\r\n\t\t\t\t\t\tcanvas: data.canvas\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'moveend':\r\n\t\t\tconsole.log('moveend', data);\r\n\t\t\tzoom = data.zoom;\r\n\t\t\tscale = data.scale;\r\n\t\t\tbbox = data.bbox;\r\n\t\t\tredrawScreen(true);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.warn('Warning: Bad command ', data);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n    requestAnimationFrame(chkVersion);     \r\n};\r\n"],"names":["WORLDWIDTHFULL","W","Math","floor","DELAY","WORLDBBOX","HOST","SCRIPTS","CheckVersion","_self","self","window","str","location","origin","_protocol","substring","indexOf","syncParams","fetchOptions","credentials","COMPARS","WrapStyle","ftc","srs","setSyncParams","hash","chkSignal","signalName","signals","opt","sObj","abort","AbortController","signal","utils","getJson","queue","params","paramsArr","forEach","it","Object","assign","par","options","method","headers","body","getFormBody","fetch","chkProtocol","url","then","res","chkResponse","type","load","catch","err","error","toString","getTileJson","substr","length","keys","map","key","encodeURIComponent","join","resp","status","Promise","reject","contentType","get","blob","json","text","Bounds","arr","min","x","Number","MAX_VALUE","y","max","extendArray","prototype","extend","extendBounds","bounds","i","len","addBuffer","dxmin","dymin","dxmax","dymax","contains","point","containsWithDelta","dx","dy","getCenter","addOffset","offset","intersects","min2","max2","intersectsWithDelta","isEqual","isNodeIntersect","coords","num","getTileBounds","delta","tileSize","CONST","pow","z","minx","miny","TILE_PREFIX","pars","tilesPromise","tilesOrder","pb","tiles","slice","tkey","tHash","reduce","p","c","j","Request","hostName","r","ModeKey","LayerName","id","replace","JSON","parse","bbox","boundsVtile","console","warn","k","render2d","scale","canvas","ctx","getContext","beginPath","strokeStyle","fillStyle","arc","PI","stroke","fill","render2dEmpty","tileKey","render","rect","moveTo","lineTo","font","textMetrics","measureText","fillText","width","requestAnimationFrame","hosts","zoom","intervalID","timeoutID","now","clearTimeout","setTimeout","chkVersion","stop","clearInterval","start","msec","setInterval","addSource","attr","layerId","ids","apiKey","apiKeyPromise","Key","Status","Result","removeSource","pt","log","values","getTileAttributes","prop","tileAttributeIndexes","tileAttributeTypes","attributes","attrs","attrTypes","identityField","a","chkHost","hostLayers","name","Name","Version","v","dateBegin","dateEnd","push","undefined","layers","stringify","bboxes","host","props","properties","LayerVersion","geometry","load_tiles","event","Event","bubbles","detail","dispatchEvent","postMessage","cmd","Date","recheckVectorTiles","clearFlag","screenAll","resetTransform","clearRect","height","transform","all","vt","coordinates","Renderer","bitmapToMain","imageData","transferToImageBitmap","bitmap","redrawScreen","addEventListener","onmessage","evt","data","worker","Worker","id1","OffscreenCanvas","screen"],"mappings":"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ACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;CAzMY,CAAZ;CA2MA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;CAEA,MAAMC,MAAM,GAAG,UAASC,GAAT,EAAc;CACzB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"}